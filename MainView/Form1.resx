<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAPY6AQD2OgEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAA
        AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAANwAAAFoAAABVAAAAVgAAAFYAAABWAAAAVgAA
        AFYAAABWAAAAVgAAAFYAAABWAAAAVgAAAFYAAABWAAAAVgAAAFYAAABWAAAAVgAAAFYAAABWAAAAVgAA
        AFYAAABVAAAAWgAAADcAAAAAAAAAAQAAAAAAAAADAAAAAAAAADcAAAD/AAAA/wAAAP4AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP4AAAD/AAAA/wAAADcAAAAAAAAAAwAAAAQAAAAAAAAAVgAAAP8AAAD4AAAA/gAA
        AP8AAAD/AAAA/wAAAP8AAAD+AAAA+wAAAPwAAAD8AAAA/AAAAPwAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP0AAAD7AAAA/AAAAPwAAAD8AAAA/AAAAPgAAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABVAAAA/wAA
        AP8AAACOAAAASwAAAFgAAABYAAAASwAAAI4AAAD/AAAA/QAAAP4AAAD/AAAA8wAAAGEAAABTAAAAVgAA
        AFgAAABLAAAAxgAAAP8AAAD9AAAA/wAAAP8AAAD/AAAA/AAAAP8AAABVAAAAAAAAAAQAAAAEAAAAAAAA
        AFYAAAD/AAAA/wAAAFUAAAAAAAAABAAAAAQAAAAAAAAAVQAAAP8AAAD8AAAA/gAAAP8AAADuAAAAEQAA
        AAAAAAABAAAAAwAAAAAAAACpAAAA/wAAAPsAAAD/AAAA/wAAAP8AAAD8AAAA/wAAAFYAAAAAAAAABAAA
        AAQAAAAAAAAAVgAAAP8AAAD/AAAAWAAAAAAAAAAHAAAABwAAAAAAAABYAAAA/wAAAPwAAAD+AAAA/wAA
        AO4AAAAVAAAAAAAAAAUAAAAHAAAAAAAAAKsAAAD/AAAA+wAAAP8AAAD/AAAA/wAAAPwAAAD/AAAAVgAA
        AAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAP8AAABYAAAAAAAAAAcAAAAHAAAAAAAAAFcAAAD/AAAA+AAA
        APoAAAD/AAAA6wAAABQAAAAAAAAABQAAAAcAAAAAAAAAqAAAAP8AAAD4AAAA+wAAAPsAAAD9AAAA/AAA
        AP8AAABWAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAFUAAAAAAAAABAAAAAQAAAAAAAAAVQAA
        AP8AAAD8AAAA/gAAAP8AAADuAAAAEQAAAAAAAAABAAAAAwAAAAAAAACqAAAA/wAAAPsAAAD/AAAA/wAA
        AP8AAAD8AAAA/wAAAFYAAAAAAAAABAAAAAQAAAAAAAAAVgAAAP8AAAD/AAAAjgAAAEsAAABYAAAAVwAA
        AFAAAAByAAAArgAAAKgAAACpAAAAqwAAAKQAAABbAAAAVAAAAFYAAABXAAAAUQAAAI0AAACvAAAAqAAA
        AKsAAACkAAAAxgAAAP8AAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAPwAAAD/AAAA/wAA
        AP8AAAD7AAAA/wAAAKoAAAAAAAAAAwAAAAEAAAAAAAAAEQAAAO4AAAD/AAAA/gAAAPwAAAD/AAAAVQAA
        AAAAAAAEAAAABAAAAAAAAABVAAAA/wAAAP8AAABWAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA/AAA
        AP0AAAD7AAAA/AAAAPgAAAD/AAAAqAAAAAAAAAAHAAAABQAAAAAAAAAUAAAA6wAAAP8AAAD6AAAA+AAA
        AP8AAABXAAAAAAAAAAcAAAAHAAAAAAAAAFgAAAD/AAAA/wAAAFYAAAAAAAAABAAAAAQAAAAAAAAAVgAA
        AP8AAAD8AAAA/gAAAP4AAAD+AAAA+gAAAP8AAACpAAAAAAAAAAUAAAACAAAAAAAAABIAAADtAAAA/wAA
        AP0AAAD6AAAA/wAAAFYAAAAAAAAABQAAAAUAAAAAAAAAVgAAAP8AAAD/AAAAVgAAAAAAAAAEAAAABAAA
        AAAAAABWAAAA/wAAAPwAAAD/AAAA/wAAAP8AAAD7AAAA/wAAAKkAAAAAAAAAAwAAAAEAAAAAAAAAEQAA
        AO4AAAD/AAAA/gAAAPwAAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABVAAAA/wAAAP8AAABWAAAAAAAA
        AAQAAAAEAAAAAAAAAFYAAAD/AAAA/QAAAPMAAADtAAAA7gAAAOsAAAD8AAAApAAAAAQAAAAUAAAAEgAA
        AA4AAAAgAAAA3wAAAPEAAADtAAAA6wAAAPsAAABbAAAAAwAAABQAAAAVAAAAAgAAAGEAAAD/AAAA/wAA
        AFYAAAAAAAAABAAAAAQAAAAAAAAAVgAAAP8AAAD/AAAAYQAAAAIAAAAVAAAAFAAAAAMAAABbAAAA+wAA
        AOsAAADtAAAA8QAAAN8AAAAgAAAADgAAABIAAAAUAAAABAAAAKQAAAD8AAAA6wAAAO4AAADtAAAA8wAA
        AP0AAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAP8AAABVAAAAAAAAAAQAAAAEAAAAAAAA
        AFYAAAD/AAAA/AAAAP4AAAD/AAAA7gAAABEAAAAAAAAAAQAAAAMAAAAAAAAAqQAAAP8AAAD7AAAA/wAA
        AP8AAAD/AAAA/AAAAP8AAABWAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA/wAAAFYAAAAAAAAABQAA
        AAUAAAAAAAAAVgAAAP8AAAD6AAAA/QAAAP8AAADtAAAAEgAAAAAAAAACAAAABQAAAAAAAACpAAAA/wAA
        APoAAAD+AAAA/gAAAP4AAAD8AAAA/wAAAFYAAAAAAAAABAAAAAQAAAAAAAAAVgAAAP8AAAD/AAAAWAAA
        AAAAAAAHAAAABwAAAAAAAABXAAAA/wAAAPgAAAD6AAAA/wAAAOsAAAAUAAAAAAAAAAUAAAAHAAAAAAAA
        AKgAAAD/AAAA+AAAAPwAAAD7AAAA/QAAAPwAAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABWAAAA/wAA
        AP8AAABVAAAAAAAAAAQAAAAEAAAAAAAAAFUAAAD/AAAA/AAAAP4AAAD/AAAA7gAAABEAAAAAAAAAAQAA
        AAMAAAAAAAAAqgAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/AAAAP8AAABWAAAAAAAAAAQAAAAEAAAAAAAA
        AFYAAAD/AAAA/wAAAMYAAACkAAAAqwAAAKgAAACvAAAAjQAAAFEAAABXAAAAVgAAAFQAAABbAAAApAAA
        AKsAAACpAAAAqAAAAK4AAAByAAAAUAAAAFcAAABYAAAASwAAAI4AAAD/AAAA/wAAAFYAAAAAAAAABAAA
        AAQAAAAAAAAAVgAAAP8AAAD8AAAA/wAAAP8AAAD/AAAA+wAAAP8AAACqAAAAAAAAAAMAAAABAAAAAAAA
        ABEAAADuAAAA/wAAAP4AAAD8AAAA/wAAAFUAAAAAAAAABAAAAAQAAAAAAAAAVQAAAP8AAAD/AAAAVgAA
        AAAAAAAEAAAABAAAAAAAAABWAAAA/wAAAPwAAAD9AAAA+wAAAPsAAAD4AAAA/wAAAKgAAAAAAAAABwAA
        AAUAAAAAAAAAFAAAAOsAAAD/AAAA+gAAAPgAAAD/AAAAVwAAAAAAAAAHAAAABwAAAAAAAABYAAAA/wAA
        AP8AAABWAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA/AAAAP8AAAD/AAAA/wAAAPsAAAD/AAAAqwAA
        AAAAAAAHAAAABQAAAAAAAAAVAAAA7gAAAP8AAAD+AAAA/AAAAP8AAABYAAAAAAAAAAcAAAAHAAAAAAAA
        AFgAAAD/AAAA/wAAAFYAAAAAAAAABAAAAAQAAAAAAAAAVgAAAP8AAAD8AAAA/wAAAP8AAAD/AAAA+wAA
        AP8AAACpAAAAAAAAAAMAAAABAAAAAAAAABEAAADuAAAA/wAAAP4AAAD8AAAA/wAAAFUAAAAAAAAABAAA
        AAQAAAAAAAAAVQAAAP8AAAD/AAAAVgAAAAAAAAAEAAAABAAAAAAAAABVAAAA/wAAAPwAAAD/AAAA/wAA
        AP8AAAD9AAAA/wAAAMYAAABLAAAAWAAAAFYAAABTAAAAYQAAAPMAAAD/AAAA/gAAAP0AAAD/AAAAjgAA
        AEsAAABYAAAAWAAAAEsAAACOAAAA/wAAAP8AAABVAAAAAAAAAAQAAAAEAAAAAAAAAFYAAAD/AAAA+AAA
        APwAAAD8AAAA/AAAAPwAAAD7AAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/AAAAPwAAAD8AAAA/AAA
        APsAAAD+AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD4AAAA/wAAAFYAAAAAAAAABAAAAAMAAAAAAAAANwAA
        AP8AAAD/AAAA/gAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAAP8AAAD/AAAANwAAAAAAAAADAAAAAAAA
        AAEAAAAAAAAANwAAAFoAAABVAAAAVgAAAFYAAABWAAAAVgAAAFYAAABWAAAAVgAAAFYAAABWAAAAVgAA
        AFYAAABWAAAAVgAAAFYAAABWAAAAVgAAAFYAAABWAAAAVgAAAFYAAABVAAAAWgAAADcAAAAAAAAAAQAA
        AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAA
        AAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAA
        AAQAAAADAAAAAAAAAAAAAAAAIAAABEv//9IgAAAEQAAAAkAAAAJAAAACQkBIAkJASAJCQEgCQkBIAkAA
        AAJAEgJCQBICQkASAkJAEgJCQAAAAkAAAAJCQEgCQkBIAkJASAJCQEgCQAAAAkASAkJAEgJCQBICQkAS
        AkJAAAACQAAAAkAAAAIgAAAES///0iAAAAQ=
</value>
  </data>
</root>